var main =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _preloader = __webpack_require__(1);

var _preloader2 = _interopRequireDefault(_preloader);

var _parallaxMain = __webpack_require__(2);

var _parallaxMain2 = _interopRequireDefault(_parallaxMain);

var _auth = __webpack_require__(3);

var _auth2 = _interopRequireDefault(_auth);

var _fixedMenu = __webpack_require__(4);

var _fixedMenu2 = _interopRequireDefault(_fixedMenu);

var _map = __webpack_require__(5);

var _map2 = _interopRequireDefault(_map);

var _blogMenu = __webpack_require__(6);

var _blogMenu2 = _interopRequireDefault(_blogMenu);

var _slider = __webpack_require__(7);

var _slider2 = _interopRequireDefault(_slider);

var _blur = __webpack_require__(8);

var _blur2 = _interopRequireDefault(_blur);

var _anchor = __webpack_require__(9);

var _anchor2 = _interopRequireDefault(_anchor);

var _skills = __webpack_require__(10);

var _skills2 = _interopRequireDefault(_skills);

var _validation = __webpack_require__(11);

var _validation2 = _interopRequireDefault(_validation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Preloader
var preload = (0, _preloader2.default)();
preload.show();

// Parallax-Mouse
if (document.getElementsByClassName('parallax-mouse').length > 0) {
	var parallax = (0, _parallaxMain2.default)();
	window.addEventListener('mousemove', parallax.parallaxMouse);
};

// Parallax-Scroll
if (document.getElementsByClassName('header-bg').length > 0) {
	var _parallax = (0, _parallaxMain2.default)();
	var wrapper = document.querySelector('body');
	var bg = document.querySelector('.header-bg');
	var portfolio = document.querySelector('.header-name');
	var info = document.querySelector('.header-info');
	wrapper.onscroll = function () {
		_parallax.parallaxScroll(bg, bg.getBoundingClientRect().top, 75);
		_parallax.parallaxScroll(portfolio, portfolio.getBoundingClientRect().top, 25);
		_parallax.parallaxScroll(info, info.getBoundingClientRect().top, 35);
	};
};

// Authorization form
if (document.getElementsByClassName('welcome-container').length > 0) {
	var formAuth = (0, _auth2.default)();
	var btn = document.querySelector('.welcome-block__link');
	var goBack = document.querySelector('.welcome-auth__homelink');
	btn.onclick = function (e) {
		e.preventDefault();
		formAuth.rotate(btn);
	};
	goBack.onclick = function (e) {
		e.preventDefault();
		formAuth.rotateBack(btn);
	};
}

// Fixed-Menu
if (document.getElementsByClassName('navigation').length > 0) {
	var fixedMenu = (0, _fixedMenu2.default)();
	var navBtn = document.querySelector('.navigation__but');
	navBtn.onclick = function (e) {
		e.preventDefault();
		fixedMenu.navActive(navBtn);
	};
}

// Google Maps
if (document.getElementsByClassName('google-map').length > 0) {
	(0, _map2.default)();
}
// Blog-Menu
if (document.getElementsByClassName('blog-menu').length > 0) {
	var blogNav = (0, _blogMenu2.default)();
	var items = document.querySelector('.blog-nav__list');
	var pushBtn = document.querySelector('.push-menu');
	document.onscroll = function () {
		blogNav.menuScroll();
		blogNav.menuData();
	};
	items.onclick = function (e) {
		e.preventDefault();
		var clickBtn = e.target;
		blogNav.menuClick(clickBtn);
	};
	pushBtn.onclick = function (e) {
		e.preventDefault();
		blogNav.menuTablets();
	};
}

// Slider
if (document.getElementsByClassName('works').length > 0) {
	var sliderObj = (0, _slider2.default)();
	sliderObj.sliderInit(document.querySelector('.portfolio-slider'));
	sliderObj.slideNav();
}

// Blur Form
if (document.getElementsByClassName('feed-form').length > 0) {
	var blurForm = (0, _blur2.default)();
	window.onload = function () {
		blurForm.set();
	};
	window.onresize = function () {
		blurForm.set();
	};
}

// Anchor
if (document.getElementsByClassName('next-arrow__but').length > 0) {
	(function () {
		var scroll = (0, _anchor2.default)();
		var arrow = document.getElementsByClassName('next-arrow__but');

		for (var i = 0; i < arrow.length; i++) {
			arrow[i].onclick = function (e) {
				e.preventDefault();
				scroll.scrollSmooth();
			};
		}
	})();
}

// Skills-On-Scroll
if (document.getElementsByClassName('skills-list').length > 0) {
	var skillsScroll = (0, _skills2.default)();
	document.onscroll = function () {
		skillsScroll.skillsRender();
		skillsScroll.skillsAnim();
	};
}

// Form Validation
if (document.getElementsByClassName('feed-form').length > 0) {
	var valid = (0, _validation2.default)();
	valid.submitInit();
}

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = preloader;
function preloader() {
    var preloadImg = document.getElementsByTagName('*');
    var preloadBg = document.querySelector('.preloader');
    var preloadText = document.querySelector('.preloader__text');
    var regImgUrl = /background-image: url\(['"]?(.*?)['"]?\)/i;
    var shadowImgArr = [];
    var progress = 0;
    var img = void 0;
    var allImg = void 0;
    var shadowImg = void 0;

    function shadowImgadd() {
        shadowImg = document.createElement('img');
        shadowImg.setAttribute('src', img);
        shadowImgArr.push(shadowImg);
    }

    return {
        show: function show() {
            return new Promise(function (resolve, reject) {
                for (var i = 0; i < preloadImg.length; i++) {
                    if (preloadImg[i].matches('img')) {
                        img = preloadImg[i].getAttribute('src');
                        shadowImgadd();
                    } else if (preloadImg[i].hasAttribute('style') && regImgUrl.test(preloadImg[i].getAttribute('style'))) {
                        img = preloadImg[i].getAttribute('style').slice(22, -2);
                        shadowImgadd();
                    }

                    allImg = 100 / shadowImgArr.length;

                    for (var j = 0; j < shadowImgArr.length; j++) {
                        preloadText.innerText = Math.ceil(progress) + '%';
                        shadowImgArr[j].onload = function () {
                            progress += allImg;
                            if (progress < 100) {
                                preloadText.innerText = Math.ceil(progress) + "%";
                            } else {
                                progress = 100;
                                preloadText.innerText = progress + "%";
                            }
                            if (Math.ceil(progress) === 100) {
                                resolve();
                            }
                        };
                    }
                }
            }).then(function () {
                return preloadBg.style.display = "none";
            });
        }
    };
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = parallaxMain;
function parallaxMain() {
    var parallaxLayer = document.getElementsByClassName('parallax-mouse__layer');

    return {
        parallaxScroll: function parallaxScroll(item, scroll, state) {
            var count = scroll / state + '%';
            item.style.transform = 'translateY(' + count + ')';
        },
        parallaxMouse: function parallaxMouse(e) {
            var positionX = 0;
            var positionY = 0;
            var speed = 100;

            for (var i = 0; i < parallaxLayer.length; i++) {
                positionX = e.pageX / -speed + 'px';
                positionY = e.pageY / -speed + 'px';
                parallaxLayer[i].style.transform = 'translate3d(' + positionX + ',' + positionY + ',0)';
                speed -= 15;
            }
        }
    };
}

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = auth;
function auth() {
    var container = document.querySelector('.welcome-container');
    var icons = document.querySelectorAll('.front-info__svg');

    return {
        rotate: function rotate(btn) {
            container.classList.add('active');
            btn.classList.add('active');
        },
        rotateBack: function rotateBack(btn) {
            container.classList.remove('active');
            btn.classList.remove('active');
        }
    };
}

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = nav;
function nav() {
    var navigation = document.querySelector('.navigation'),
        navItems = document.getElementsByClassName('navigation__item'),
        headerInfo = document.querySelector('.header-info');

    return {
        navActive: function navActive(navBtn) {
            var delay = 0.1;
            if (!navigation.classList.contains('active')) {
                navigation.classList.add('active');
                navBtn.classList.add('active');
                document.body.style.overflow = "hidden";
                headerInfo.style.opacity = '0';
                for (var i = 0; i < navItems.length; i++) {
                    delay += 0.1;
                    navItems[i].style.animationDelay = delay + 's';
                    navItems[i].classList.add('active');
                }
            } else {
                navigation.classList.remove('active');
                navBtn.classList.remove('active');
                document.body.style.overflow = "inherit";
                headerInfo.style.opacity = '1';
                for (var _i = 0; _i < navItems.length; _i++) {
                    navItems[_i].classList.remove('active');
                }
            }
        }
    };
}

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = initMap;
function initMap() {
  var styledMapType = new google.maps.StyledMapType([{
    "featureType": "landscape",
    "elementType": "geometry",
    "stylers": [{
      "color": "#ffffff"
    }]
  }, {
    "featureType": "poi",
    "elementType": "labels",
    "stylers": [{
      "visibility": "off"
    }]
  }, {
    "featureType": "road",
    "elementType": "geometry",
    "stylers": [{
      "color": "#c0c0c0"
    }]
  }, {
    "featureType": "water",
    "elementType": "geometry",
    "stylers": [{
      "color": "#1bb696"
    }]
  }], { name: 'Styled Map' });

  var map = new google.maps.Map(document.getElementById('map'), {
    center: { lat: 47.8443337, lng: 35.0873266 },
    zoom: 15,
    disableDefaultUI: true,
    mapTypeControlOptions: {
      mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain', 'styled_map']
    }
  });

  var marker = new google.maps.Marker({
    position: { lat: 47.8443337, lng: 35.0973266 },
    icon: {
      url: 'img/svg/map_marker.svg',
      scaledSize: new google.maps.Size(30, 40)
    },
    map: map
  });

  map.mapTypes.set('styled_map', styledMapType);
  map.setMapTypeId('styled_map');

  map.setOptions({
    draggable: true, zoomControl: false, scrollwheel: false, disableDoubleClickZoom: false
  });
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = blogMenu;
function blogMenu() {
    var blogNav = document.querySelector('.blog-nav');
    var navList = blogNav.querySelector('.blog-nav__list');
    var navItems = blogNav.getElementsByClassName('blog-nav__item');
    var blogMenu = document.querySelector('.blog-menu');
    var navLength = navItems.length;
    var articleItems = document.getElementsByClassName('blog-info__item');
    var count = 0;
    navList.children[0].classList.add('active');

    (function setAttr() {
        for (var i = 0; i < navLength; i++) {
            count++;
            navItems[i].setAttribute('data-name', 'article-' + count);
            articleItems[i].setAttribute('data-name', 'article-' + count);
        }
    })();

    return {
        menuScroll: function menuScroll() {
            if (blogNav.getBoundingClientRect().top < 20) {
                navList.classList.add('active');
            } else if (blogNav.getBoundingClientRect().top > 20) {
                navList.classList.remove('active');
            }
        },
        menuData: function menuData() {
            for (var i = 0; i < navLength; i++) {
                if (articleItems[i].getBoundingClientRect().top - 200 < 0 && articleItems[i].getBoundingClientRect().bottom - 200 > 0) {
                    if (navItems[i].getAttribute('data-name') === articleItems[i].getAttribute('data-name')) {
                        navItems[i].classList.add('active');
                    }
                } else {
                    navItems[i].classList.remove('active');
                }
            }
        },
        menuClick: function menuClick(clickBtn) {
            var scrollInterval = setInterval(scrollAnim, 10);
            function scrollAnim() {
                for (var i = 0; i < navLength; i++) {
                    if (clickBtn.parentNode.getAttribute('data-name') === articleItems[i].getAttribute('data-name')) {
                        if (articleItems[i].getBoundingClientRect().top - 200 > 0) {
                            setTimeout(scrollAnim, 10);
                            window.scrollBy(0, 30);
                            clearInterval(scrollInterval);
                        } else if (articleItems[i].getBoundingClientRect().top <= 0) {
                            setTimeout(scrollAnim, 10);
                            window.scrollBy(0, -30);
                            clearInterval(scrollInterval);
                        }
                    }
                }
            }
        },
        menuTablets: function menuTablets() {
            if (!blogMenu.classList.contains('active')) {
                blogMenu.classList.add('active');
                if (window.pageYOffset <= 600) {
                    navList.children[0].classList.add('active');
                }
            } else {
                blogMenu.classList.remove('active');
                navList.children[0].classList.remove('active');
            }
        }
    };
}

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = slider;
function slider() {
  'use strict';

  var slideItems = [{ imgUrl: '../img/content/slider-1.png', slideCaption: 'Корпоративный сайт фитнес-центра', technology: 'HTML5, CSS3, БЭМ, Git', slideUrl: 'http://fitness.iamcoder.in.ua' }, { imgUrl: '../img/content/slider-2.jpg', slideCaption: 'Лендинг ресторана бургеров', technology: 'pug, sass, JavaScript, jQuery, AJAX, Gulp4, WebPack3, Git', slideUrl: 'http://burger.iamcoder.in.ua' }, { imgUrl: '../img/content/slider-3.jpg', slideCaption: 'Сайт-визитка психолога-психоаналитика', technology: 'pug, sass, VanillaJS, VueJS, AJAX, PHP, MongoDB, WebPack3, Git', slideUrl: 'http://lagutina.com.ua' }, { imgUrl: '../img/content/slider-4.png', slideCaption: 'Мой сайт портфолио', technology: 'pug, sass, VanillaJS, AJAX, VueJS, node.js, MongoDB, Gulp4, WebPack3, Git', slideUrl: 'https://iamcoder.in.ua' }];

  function getJSON() {
    var xhr = new XMLHttpRequest();
    xhr.open('GET', '/getWork', false);
    xhr.send();
    if (xhr.status !== 200) {
      console.log(xhr.status + ' : ' + xhr.statusText);
    } else {
      console.log(xhr.status + ' : ' + xhr.statusText);
      var data = JSON.parse(xhr.responseText);
      for (var i = 0; i < data.length; i++) {
        var createWorkElem = {
          imgUrl: data[i].path,
          slideCaption: data[i].name,
          technology: data[i].tech,
          slideUrl: data[i].link
        };
        slideItems.push(createWorkElem);
      }
    }

    function newFunction() {
      return console.log;
    }
  }

  var flagCreate = false;
  var isAnim = false;
  var counter = 0;

  function classListAdd(elem) {
    var elemClassName = ['js-slider-text', 'js-slider-head', 'js-slider-slide'];
    var containerClassName = ['js-slider-left', 'js-slider-right'];
    var sliderTextClassName = ['js-slider-capt', 'js-slider-tech', 'js-slider-link'];
    var sliderContainers = [];
    var counter = 0;

    elem.classList.add('slider-js');

    if (elem.classList.contains('slider-js')) {
      for (var i = 0; i < elem.children.length; i++) {
        elem.children[i].classList.add(elemClassName[counter]);
        counter++;
      };
    };

    counter = 0;

    for (var _i = 0; _i < elem.children.length; _i++) {
      if (elem.children[_i].classList.contains('js-slider-slide')) {
        var slideContainer = elem.children[_i];
        for (var j = 0; j < slideContainer.children.length; j++) {
          slideContainer.children[j].classList.add(containerClassName[j]);
          sliderContainers.push(slideContainer.children[j]);
        };
      } else if (elem.children[_i].classList.contains('js-slider-text')) {
        var textContainer = elem.children[_i];
        for (var _j = 0; _j < textContainer.children.length; _j++) {
          textContainer.children[_j].classList.add(sliderTextClassName[_j]);
        }
      };
    };

    for (var _i2 = 0; _i2 < sliderContainers.length; _i2++) {
      if (sliderContainers[_i2].classList.contains('js-slider-left')) {
        slideListClassAdd('js-nav-left', 'a', sliderContainers[_i2]);
        slideListClassAdd('js-slidelist-left', 'ul', sliderContainers[_i2]);
      } else if (sliderContainers[_i2].classList.contains('js-slider-right')) {
        slideListClassAdd('js-nav-right', 'a', sliderContainers[_i2]);
        slideListClassAdd('js-slidelist-right', 'ul', sliderContainers[_i2]);
        flagCreate = true;
      }
      if (flagCreate === true) {
        createImages(document.getElementsByClassName('js-slidelist-left'), document.querySelector('.js-slidelist-right'));
      };
    };
  };

  function slideListClassAdd(listClassName, search, elem) {
    for (var j = 0; j < elem.children.length; j++) {
      var slideLists = elem.children[j].matches(search);
      if (slideLists === true) {
        elem.children[j].classList.add(listClassName);
      };
    };
  };

  function createImages() {
    var imgArray = [];
    for (var i = 0; i < slideItems.length; i++) {
      var item = document.createElement('li');
      var img = document.createElement('img');
      img.setAttribute('src', slideItems[i].imgUrl);
      item.appendChild(img);
      item.classList.add('portfolio-slider__slides-item', 'js-slider-item');
      img.classList.add('portfolio-slider__slides-img', 'js-slider-img');
      item.setAttribute('data-title', slideItems[i].slideCaption);
      item.setAttribute('data-tech', slideItems[i].technology);
      item.setAttribute('data-link', slideItems[i].slideUrl);
      imgArray.push(item);
    };
    appendImage(imgArray);
  };

  function appendImage(img) {
    var slideHeight = '-' + window.getComputedStyle(document.querySelector('.js-slider-slide')).height;
    var rslide = document.querySelector('.js-slidelist-right');
    var lslide = document.querySelector('.js-slidelist-left');
    rslide.style.transform = 'translateY(' + slideHeight + ')';
    lslide.style.transform = 'translateY(' + slideHeight + ')';
    for (var i = 0; i < img.length; i++) {
      rslide.appendChild(img[i]);
      var imgClone = img[i].cloneNode(true);
      lslide.appendChild(imgClone);
    };
    firstSlide(lslide);
  };

  function firstSlide(slide) {
    var slideHead = document.querySelector('.js-slider-head');
    var firstSlideUrl = slide.children[0].children[0].getAttribute('src');
    var firstSlideTitle = slide.children[0].getAttribute('data-title');
    var firstSlideTech = slide.children[0].getAttribute('data-tech');
    var firstSlideLink = slide.children[0].getAttribute('data-link');
    var slideTitle = document.querySelector('.js-slider-capt');
    var slideTech = document.querySelector('.js-slider-tech');
    var slideLink = document.querySelector('.js-slider-link');
    slideHead.children[0].children[0].setAttribute('src', firstSlideUrl);
    slideTitle.textContent = firstSlideTitle;
    slideTech.textContent = firstSlideTech;
    slideLink.setAttribute('href', firstSlideLink);
  };

  function translate(right, left, status) {
    var slideLength = left.children.length - 1;
    if (status === true) {
      left.appendChild(left.children[0]);
      right.insertBefore(right.children[slideLength], right.children[0]);
    } else {
      right.appendChild(right.children[0]);
      left.insertBefore(left.children[slideLength], left.children[0]);
    };
  };

  function slideMove(nav) {
    return new Promise(function (resolve, reject) {
      var rslide = document.querySelector('.js-slidelist-right');
      var lslide = document.querySelector('.js-slidelist-left');
      var speed = 0;
      var status = false;
      var animInterval = setInterval(slideAnimate, 20);
      var slides = document.querySelectorAll('.js-slider-item');
      function slideAnimate() {
        if (nav.classList.contains('js-nav-left')) {
          if (counter < slides.length) {
            for (var i = 0; i < lslide.children.length; i++) {
              if (speed < 100) {
                speed++;
                lslide.children[i].style.transform = 'translateY(' + '-' + speed + '%)';
                rslide.children[i].style.transform = 'translateY(' + speed + '%)';
                status = true;
              } else clearInterval(animInterval);
            };
            firstSlide(lslide);
          }
        } else if (nav.classList.contains('js-nav-right')) {
          if (counter < slides.length) {
            for (var _i3 = 0; _i3 < rslide.children.length; _i3++) {
              if (speed < 100) {
                speed++;
                rslide.children[_i3].style.transform = 'translateY(' + '-' + speed + '%)';
                lslide.children[_i3].style.transform = 'translateY(' + speed + '%)';
              } else clearInterval(animInterval);
            };
            firstSlide(lslide);
          }
        };
        if (speed === 100) {
          resolve(status);
        }
      }
    }).then(function (status) {
      var rslide = document.querySelector('.js-slidelist-right');
      var lslide = document.querySelector('.js-slidelist-left');
      translate(rslide, lslide, status);
      for (var i = 0; i < rslide.children.length; i++) {
        rslide.children[i].removeAttribute('style');
        lslide.children[i].removeAttribute('style');
      }
    });
  }

  return {
    sliderInit: function sliderInit(elem) {
      getJSON();
      classListAdd(elem);
    },
    slideNav: function slideNav() {
      var navLeft = document.querySelector('.js-nav-left');
      var navRight = document.querySelector('.js-nav-right');
      navLeft.onclick = function (e) {
        e.preventDefault();
        slideMove(navLeft);
      };
      navRight.onclick = function (e) {
        e.preventDefault();
        slideMove(navRight);
      };
    }
  };
}

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = blur;
function blur() {
    var feedBg = document.querySelector('.feed-bg__img');
    var form = document.querySelector('.feed-form');
    var formBg = form.querySelector('.feed-form__bg');
    var blurCSS = formBg.style;

    return {
        set: function set() {
            var imgWidth = feedBg.offsetWidth;
            var imgHeight = feedBg.offsetHeight;
            var posLeft = -form.offsetLeft;
            var posTop = -form.offsetTop;

            blurCSS.backgroundSize = imgWidth + 'px' + (' ' + imgHeight + 'px');
            blurCSS.backgroundPosition = posLeft + 'px' + ' ' + posTop + 'px';
        }
    };
};

/***/ }),
/* 9 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = anchor;
function anchor() {
    var anchorTarget = document.getElementById('up');

    return {
        scrollSmooth: function scrollSmooth() {
            var scrollInterval = setInterval(goUp, 10);
            function goUp() {
                if (anchorTarget.getAttribute('id') === 'up') {
                    if (anchorTarget.getBoundingClientRect().top >= 0) {
                        setTimeout(goUp, 20);
                        window.scrollBy(0, 30);
                        clearInterval(scrollInterval);
                    } else if (anchorTarget.getBoundingClientRect().top < -30) {
                        setTimeout(goUp, 20);
                        window.scrollBy(0, -30);
                        clearInterval(scrollInterval);
                    }
                }
            }
        }
    };
}

/***/ }),
/* 10 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = skills;
function skills() {
  var skillsList = document.querySelector('.skills-list');
  var circleSec = skillsList.getElementsByClassName('skills-row__circle-second');
  var skills = [];
  var count = 0;

  return {
    skillsRender: function skillsRender() {
      function getSkills() {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', 'api/getSkills', false);
        xhr.send();

        if (xhr.status !== 200) {
          console.log(xhr.status + ' : ' + xhr.statusText);
        } else {
          var data = JSON.parse(xhr.responseText);
          console.log(data);
          console.log(data.getSkill);
          for (var i = 0; i < data.getSkill.length; i++) {
            var createElem = {
              nameSkill: data.getSkill[i].nameSkill,
              percent: data.getSkill[i].percent,
              typeSkill: data.getSkill[i].typeSkill - 1
            };
            skills.push(createElem);
            console.log(createElem);
          }
        }
      }
      return getSkills();
    },
    skillsAnim: function skillsAnim() {
      var delay = 0;
      if (skillsList.getBoundingClientRect().top < 600) {
        for (var i = 0; i < circleSec.length; i++) {
          circleSec[i].setAttribute('data-skill', 'skills');
          circleSec[i].style.animationDelay = delay + 's';
          delay += 0.3;
        }
      }
    }
  };
}

/***/ }),
/* 11 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = formValid;
function formValid() {
    var error = document.getElementById('errorr');
    var popBtns = error.getElementsByClassName('close-btn');
    var popText = error.querySelector('.form-popup__text');
    var form = document.querySelector('.form');
    var inputs = form.getElementsByClassName('form-row__input');
    var regexp = /^([a-z0-9_\.-])+@[a-z0-9-]+\.([a-z]{2,4}\.)?[a-z]{2,4}$/i;

    var flag = false;

    function closeBtns() {
        for (var j = 0; j < popBtns.length; j++) {
            popBtns[j].addEventListener('click', function (e) {
                e.preventDefault();
                error.classList.remove('active');
                for (var i = 0; i < inputs.length; i++) {
                    inputs[i].removeAttribute('style');
                }
            });
        };
    }

    function validEmail(elem) {
        if (elem.getAttribute('name') === 'email') {
            if (regexp.test(elem.value) === false) {
                elem.style.border = '1px solid red';
                error.classList.add('active');
                closeBtns();
                flag = false;
            } else {
                flag = true;
            }
        }
    }

    function sendAjax() {
        var xhr = new XMLHttpRequest();
        var data = {};
        for (var j = 0; j < inputs.length; j++) {
            if (inputs[j].getAttribute('name') === 'name') data.name = inputs[j].value;
            if (inputs[j].getAttribute('name') === 'email') data.email = inputs[j].value;
            if (inputs[j].getAttribute('name') === 'text') data.text = inputs[j].value;
        }
        var jsonData = JSON.stringify(data);
        xhr.open('POST', '/contact', true);
        xhr.setRequestHeader('Content-Type', 'application/json');
        xhr.send(jsonData);
        xhr.onreadystatechange = function () {
            if (xhr.status !== 301) {
                console.log(xhr.status + ' : ' + xhr.statusText);
                error.classList.add('active');
                popText.textContent = 'Произошла ошибка на сервере';
                closeBtns();
            } else {
                error.classList.add('active');
                popText.textContent = 'Письмо успешно отправлено';
                closeBtns();
                form.reset();
            }
        };
    }

    function valid() {
        for (var i = 0; i < inputs.length; i++) {
            if (inputs[i].value === "" || inputs[i].value === " ") {
                inputs[i].style.border = '1px solid red';
                error.classList.add('active');
                closeBtns();
                flag = false;
            } else validEmail(inputs[i]);
        }
        if (flag) {
            sendAjax();
        }
    }

    return {
        submitInit: function submitInit() {
            form.addEventListener('submit', function (e) {
                e.preventDefault();
                valid();
            });
        }
    };
}

/***/ })
/******/ ]);