var main =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var _preloader = __webpack_require__(1);

var _preloader2 = _interopRequireDefault(_preloader);

var _auth = __webpack_require__(2);

var _fixedMenu = __webpack_require__(3);

var _parallaxMain = __webpack_require__(4);

var _map = __webpack_require__(5);

var _blogMenu = __webpack_require__(6);

var _slider = __webpack_require__(7);

var _anchor = __webpack_require__(8);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Parallax
var wrapper = document.querySelector('body');
// import { blur } from './modules/blur.js';

var bg = document.querySelector('.header-bg');
var portfolio = document.querySelector('.header-name');
var info = document.querySelector('.header-info');
// Authorization form
var btn = document.querySelector('.welcome-block__link');
var goBack = document.querySelector('.welcome-auth__homelink');
// Fixed-Menu
var navBtn = document.querySelector('.navigation__but');
// Preloader
var preload = (0, _preloader2.default)();

// Preloader
preload.show();

// Parallax-Mouse
if (document.getElementsByClassName('parallax-mouse').length > 0) {
	var parallax = (0, _parallaxMain.parallaxMain)();
	window.addEventListener('mousemove', parallax.parallaxMouse);
};

// Parallax-Scroll
if (document.getElementsByClassName('header-bg').length > 0) {
	var _parallax = (0, _parallaxMain.parallaxMain)();
	wrapper.onscroll = function () {
		_parallax.parallaxMove(bg, bg.getBoundingClientRect().top, 75);
		_parallax.parallaxMove(portfolio, portfolio.getBoundingClientRect().top, 25);
		_parallax.parallaxMove(info, info.getBoundingClientRect().top, 35);
	};
};

// Authorization form
if (document.getElementsByClassName('welcome-container').length > 0) {
	var formAuth = (0, _auth.auth)();
	btn.onclick = function (e) {
		e.preventDefault();
		formAuth.rotate(btn);
	};
	goBack.onclick = function (e) {
		e.preventDefault();
		formAuth.rotateBack(btn);
	};
}

// Fixed-Menu
if (document.getElementsByClassName('navigation').length > 0) {
	var fixedMenu = (0, _fixedMenu.nav)();
	navBtn.onclick = function (e) {
		e.preventDefault();
		fixedMenu.navActive(navBtn);
	};
}

// Google Maps
if (document.getElementsByClassName('google-map').length > 0) {
	(0, _map.initMap)();
}
// Blog-Menu
if (document.getElementsByClassName('blog-menu').length > 0) {
	var blogNav = (0, _blogMenu.blogMenu)();
	var items = document.querySelector('.blog-nav__list');
	var pushBtn = document.querySelector('.push-menu');
	document.onscroll = function () {
		blogNav.menuScroll();
		blogNav.menuData();
	};
	items.onclick = function (e) {
		e.preventDefault();
		var clickBtn = e.target;
		blogNav.menuClick(clickBtn);
	};
	pushBtn.onclick = function (e) {
		e.preventDefault();
		blogNav.menuTablets();
	};
}

// Slider
if (document.getElementsByClassName('portfolio-slider').length > 0) {
	var sliderInit = (0, _slider.sliderMain)();
	var slideLeft = document.querySelector('.js-slide-left');
	var slideRight = document.querySelector('.js-slide-right');
	var currentSlide = 0;
	sliderInit.fillSlider();
	slideLeft.onclick = function (e) {
		e.preventDefault();
		sliderInit.fillSlider();
	};
	slideRight.onclick = function (e) {
		e.preventDefault();
		sliderInit.fillSlider();
	};
}

// blur.set();

// window.onresize = function() {
//     blur.set();
// };

// Anchor
if (document.getElementsByClassName('next-arrow__but').length > 0) {
	var scroll = (0, _anchor.anchor)();
	var arrow = document.querySelector('.next-arrow__but');

	arrow.onclick = function (e) {
		e.preventDefault();
		scroll.scrollSmooth();
	};
}

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = preloader;
function preloader() {
    var preloadImg = document.getElementsByTagName('*');
    var preloadBg = document.querySelector('.preloader');
    var preloadText = document.querySelector('.preloader__text');
    var regImgUrl = /background-image: url\(['"]?(.*?)['"]?\)/i;
    var shadowImgArr = [];
    var progress = 0;
    var img = void 0;
    var allImg = void 0;
    var shadowImg = void 0;

    function shadowImgadd() {
        shadowImg = document.createElement('img');
        shadowImg.setAttribute('src', img);
        shadowImgArr.push(shadowImg);
    }

    return {
        show: function show() {
            return new Promise(function (resolve, reject) {
                for (var i = 0; i < preloadImg.length; i++) {
                    if (preloadImg[i].matches('img')) {
                        img = preloadImg[i].getAttribute('src');
                        shadowImgadd();
                    } else if (preloadImg[i].hasAttribute('style') && regImgUrl.test(preloadImg[i].getAttribute('style'))) {
                        img = preloadImg[i].getAttribute('style').slice(22, -2);
                        shadowImgadd();
                    }

                    allImg = 100 / shadowImgArr.length;

                    for (var j = 0; j < shadowImgArr.length; j++) {
                        preloadText.innerText = Math.ceil(progress) + '%';
                        shadowImgArr[j].onload = function () {
                            progress += allImg;
                            if (progress < 100) {
                                preloadText.innerText = Math.ceil(progress) + "%";
                            } else {
                                progress = 100;
                                preloadText.innerText = progress + "%";
                            }
                            if (Math.ceil(progress) === 100) {
                                resolve();
                            }
                        };
                    }
                }
            }).then(function () {
                return preloadBg.style.display = "none";
            });
        }
    };
}

/***/ }),
/* 2 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var auth = exports.auth = function auth() {
    var container = document.querySelector('.welcome-container'),
        icons = document.querySelectorAll('.front-info__svg');

    return {
        rotate: function rotate(btn) {
            container.classList.add('active');
            btn.classList.add('active');
        },
        rotateBack: function rotateBack(btn) {
            container.classList.remove('active');
            btn.classList.remove('active');
        }
    };
};

/***/ }),
/* 3 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var nav = exports.nav = function nav() {
    var navigation = document.querySelector('.navigation'),
        navItems = document.getElementsByClassName('navigation__item'),
        headerInfo = document.querySelector('.header-info');

    return {
        navActive: function navActive(navBtn) {
            var delay = 0.1;
            if (!navigation.classList.contains('active')) {
                navigation.classList.add('active');
                navBtn.classList.add('active');
                document.body.style.overflow = "hidden";
                headerInfo.style.opacity = '0';
                for (var i = 0; i < navItems.length; i++) {
                    delay += 0.1;
                    navItems[i].style.animationDelay = delay + 's';
                    navItems[i].classList.add('active');
                }
            } else {
                navigation.classList.remove('active');
                navBtn.classList.remove('active');
                document.body.style.overflow = "inherit";
                headerInfo.style.opacity = '1';
                for (var _i = 0; _i < navItems.length; _i++) {
                    navItems[_i].classList.remove('active');
                }
            }
        }
    };
};

/***/ }),
/* 4 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var parallaxMain = exports.parallaxMain = function parallaxMain() {
    var parallaxLayer = document.getElementsByClassName('parallax-mouse__layer');

    return {
        parallaxMove: function parallaxMove(item, scroll, state) {
            var count = scroll / state + '%';
            item.style.transform = 'translateY(' + count + ')';
        },
        parallaxMouse: function parallaxMouse(e) {
            // const initialX = (window.innerWidth / 2) - e.pageX;
            // const initialY = (window.innerHeight / 2) - e.pageY;


            // [].slice.call(parallaxLayer).forEach((layer, i) => {
            //     const divider = i / 100,
            //     positionX = initialX * divider,
            //     positionY = initialY * divider;
            //     let transformString = 'translate(${positionX}px, ${positionY}px)';
            //     layer[i].style.transform  = transformString;

            // });

            var positionX = 0,
                positionY = 0,
                speed = 100;

            for (var i = 0; i < parallaxLayer.length; i++) {
                positionX = e.pageX / -speed + 'px';
                positionY = e.pageY / -speed + 'px';
                parallaxLayer[i].style.transform = 'translate3d(' + positionX + ',' + positionY + ',0)';
                console.log(positionX, positionY);
                speed -= 15;
            }
        }
    };
};

/***/ }),
/* 5 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initMap = initMap;
function initMap() {
  var styledMapType = new google.maps.StyledMapType([{
    "featureType": "landscape",
    "elementType": "geometry",
    "stylers": [{
      "color": "#ffffff"
    }]
  }, {
    "featureType": "poi",
    "elementType": "labels",
    "stylers": [{
      "visibility": "off"
    }]
  }, {
    "featureType": "road",
    "elementType": "geometry",
    "stylers": [{
      "color": "#c0c0c0"
    }]
  }, {
    "featureType": "water",
    "elementType": "geometry",
    "stylers": [{
      "color": "#1bb696"
    }]
  }], { name: 'Styled Map' });

  var map = new google.maps.Map(document.getElementById('map'), {
    center: { lat: 47.8443337, lng: 35.0873266 },
    zoom: 15,
    disableDefaultUI: true,
    mapTypeControlOptions: {
      mapTypeIds: ['roadmap', 'satellite', 'hybrid', 'terrain', 'styled_map']
    }
  });

  var marker = new google.maps.Marker({
    position: { lat: 47.8443337, lng: 35.0973266 },
    icon: {
      url: 'img/svg/map_marker.svg',
      scaledSize: new google.maps.Size(30, 40)
    },
    map: map
  });

  map.mapTypes.set('styled_map', styledMapType);
  map.setMapTypeId('styled_map');

  map.setOptions({
    draggable: true, zoomControl: false, scrollwheel: false, disableDoubleClickZoom: false
  });
};

/***/ }),
/* 6 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var blogMenu = exports.blogMenu = function blogMenu() {
    var blogNav = document.querySelector('.blog-nav');
    var navList = blogNav.querySelector('.blog-nav__list');
    var navItems = blogNav.getElementsByClassName('blog-nav__item');
    var blogMenu = document.querySelector('.blog-menu');
    var navLength = navItems.length;
    var articleItems = document.getElementsByClassName('blog-info__item');
    var count = 0;
    navList.children[0].classList.add('active');

    (function setAttr() {
        for (var i = 0; i < navLength; i++) {
            count++;
            navItems[i].setAttribute('data-name', 'article-' + count);
            articleItems[i].setAttribute('data-name', 'article-' + count);
        }
    })();

    return {
        menuScroll: function menuScroll() {
            if (blogNav.getBoundingClientRect().top < 20) {
                navList.classList.add('active');
            } else if (blogNav.getBoundingClientRect().top > 20) {
                navList.classList.remove('active');
            }
        },
        menuData: function menuData() {

            for (var i = 0; i < navLength; i++) {
                if (articleItems[i].getBoundingClientRect().top - 200 < 0 && articleItems[i].getBoundingClientRect().bottom - 200 > 0) {
                    if (navItems[i].getAttribute('data-name') === articleItems[i].getAttribute('data-name')) {
                        navItems[i].classList.add('active');
                    }
                } else {
                    navItems[i].classList.remove('active');
                }
            }
        },
        menuClick: function menuClick(clickBtn) {
            var scrollInterval = setInterval(scrollAnim, 10);
            function scrollAnim() {
                for (var i = 0; i < navLength; i++) {
                    if (clickBtn.parentNode.getAttribute('data-name') === articleItems[i].getAttribute('data-name')) {
                        if (articleItems[i].getBoundingClientRect().top - 200 > 0) {
                            setTimeout(scrollAnim, 10);
                            window.scrollBy(0, 30);
                            clearInterval(scrollInterval);
                        } else if (articleItems[i].getBoundingClientRect().top <= 0) {
                            setTimeout(scrollAnim, 10);
                            window.scrollBy(0, -30);
                            clearInterval(scrollInterval);
                        }
                    }
                }
            }
        },
        menuTablets: function menuTablets() {
            if (!blogMenu.classList.contains('active')) {
                blogMenu.classList.add('active');
                if (pageYOffset <= 600) {
                    navList.children[0].classList.add('active');
                }
            } else {
                blogMenu.classList.remove('active');
                navList.children[0].classList.remove('active');
            }
        }
    };
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var sliderMain = exports.sliderMain = function sliderMain() {

    var slides = [{
        title: 'slide 1',
        image: '../img/content/slide-1.png',
        description: 'Описание проекта 1',
        tags: ['js', 'pug']
    }, {
        title: 'slide 2',
        image: '../img/content/slide-2.jpg',
        description: 'Описание проекта 2',
        tags: ['js', 'pug']
    }, {
        title: 'slide 3',
        image: '../img/content/slide-3.jpg',
        description: 'Описание проекта 3',
        tags: ['js', 'pug']
    }, {
        title: 'slide 4',
        image: '../img/content/slide-4.png',
        description: 'Описание проекта 4',
        tags: ['js', 'pug']
    }];

    var slider = document.querySelector('.js-slider');
    var mainSlide = slider.querySelector('.js-slide-head');
    var slideLeft = slider.querySelector('.js-slide-left');
    var slideRight = slider.querySelector('.js-slide-right');
    var currentSlide = 0;
    var slidesLength = slides.length;

    return {
        fillSlider: function fillSlider() {

            var slideLimiter = function slideLimiter(value) {
                if (value >= slidesLength) {
                    return 0;
                } else if (value < 0) {
                    return slidesLength - 1;
                } else {
                    return value;
                }
            };

            var prev = slideLimiter(currentSlide - 1),
                next = slideLimiter(currentSlide + 1);

            currentSlide = slideLimiter(currentSlide - 1);
            currentSlide = slideLimiter(currentSlide + 1);

            var img = document.createElement('img');
            img.setAttribute('src', slides[currentSlide].image);
            img.classList.add('portfolio-slider__head-img');
            mainSlide.appendChild(img);

            var img1 = document.createElement('img');
            img1.setAttribute('src', slides[prev].image);
            img1.classList.add('slide-left__img');
            slideLeft.appendChild(img1);

            var img2 = document.createElement('img');
            img2.setAttribute('src', slides[next].image);
            img2.classList.add('slide-right__img');
            slideRight.appendChild(img2);
        }
    };
};

/***/ }),
/* 8 */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


Object.defineProperty(exports, "__esModule", {
    value: true
});
var anchor = exports.anchor = function anchor() {
    var arrow = document.querySelector('.next-arrow__but');
    var titleMain = document.querySelector('.title-main');

    return {
        scrollSmooth: function scrollSmooth() {
            var scrollInterval = setInterval(goUp, 10);
            function goUp() {
                if (titleMain.parentNode.hasAttributes('#up')) {
                    if (titleMain.getBoundingClientRect().top - 50 > 0) {

                        setTimeout(goUp, 20);
                        window.scrollBy(0, 30);
                        clearInterval(scrollInterval);
                    }
                }
            }
        }
    };
};

// scrollingTop: function () {
//     let
//         timer = 0,
//         interval = setInterval(scrollTopAnimate, 10);
//     console.log(window.scrollY);

//     function scrollTopAnimate() {
//         if (window.pageYOffset === 0) {
//             clearInterval(interval);
//         } else {
//             if (timer < window.scrollY) {
//                 setInterval(scrollTopAnimate, 100);
//                 console.log(window.scrollY);
//                 window.scrollBy(0, -50);
//             }
//             timer++;
//         }
//     }
// }

/***/ })
/******/ ]);